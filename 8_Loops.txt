A loop in shell scripting is a control structure that allows you to execute a block of code repeatedly, based on specific conditions. Shell scripting provides several types of loops, each serving different purposes. Below are the commonly used loops:

ðŸ”„For Loop
	The forloop iterates over a list or a range of values and performs actions for each item

	Syntax:
	for item in list; do
		#Commands to execute for each item
	done
	
	
	Example:
	for i in 1 2 3; do
		echo "Number: $i"
	done
	
	Output:
	Number: 1
	Number: 2
	Number: 3

	Range Example:
	for i in {1..3}; do
		echo "Count: $i"
	done
 
	Output:
	Count: 1
	Count: 2
	Count: 3


ðŸ”„While Loop
	The while loop runs as long as the specified condition is true.

	Syntax:
	while [ condition ]; do
		#Commands to execute
	done
	
	Example:
	count [ $count -le 3 ]; do
		echo "Count is: $count"
		((count++))  #Increment count
	done
	
	Output:
	Count is: 1
	Count is: 2
	Count is: 3
	
	
ðŸ”„Until Loop
	The until loop continues to execute until the condition becomes true.
	
	Syntax:
	until [ condition ]; do
		# Commands to execute
	done
	
	Example:
	count=1
	until [ $count -gt 3 ]; do
		echo "Count is: $count"
		((count++))
	done
	
	Output:
	Count is: 1
	Count is: 2
	Count is: 3
	
ðŸ”„Infinite Loop
	Aninfinite loop continues running indefinitely until it is manually stopped (e.g.,
 using Ctrl+C).
	
	For Loop Infinite Example:
	for (( ; ; )); do
		echo "This is an infinite loop"
	done

	While Infinite Example:
	while :; do
		echo "Infinite loop with while"
	done

	Until Infinite Example:
	until false; do
		echo "Infinite loop with until"
	done
 
	Output (repeats indefinitely):
	This is an infinite loop
	This is an infinite loop
	...
	
ðŸ–¥Select Loop
	The selectloop creates a simple menu system, which allows users to select an option from a list. It's useful when you need a user-driven selection process.	
 
	Syntax:
	select option in list; do
		# Commands based on user choice
	done

	Example:
	PS3="Choose a fruit: "
	select fruit in Apple Banana Orange Exit; do
		case $fruit in
			Apple) echo "You chose Apple";;
			Banana) echo "You chose Banana";;
			Orange) echo "You chose Orange";;
			Exit) break;;
			*) echo "Invalid option";;
	esac
	done

	Example Output:
	1) Apple
	2) Banana
	3) Orange
	4) Exit
	Choose a fruit: 2
	You chose Banana

	Explanation:
		PS3setsthepromptmessage.
		Theselectloopdisplays options, and each selection runs the corresponding case statement.
		Thebreakstatementexits the loop when the user selects "Exit."

	Summary of Loop Types
		ForLoop:Iterates over a list or range.
		WhileLoop:Continues as long as a condition is true.
		Until Loop:Continues until a condition becomes true.
		Infinite Loop:Runsindefinitely until interrupted.
		Select Loop: Displays a menu for user selection.


Tip:
Loops are powerful tools for automating repetitive tasks. You can use them for various purposes like iterating over files, arrays, or ranges. For example, you can rename all files in a directory using a loop.