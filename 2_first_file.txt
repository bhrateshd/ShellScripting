How to create a file and use it?

Creating amd editing files using the vi command is core skill for working in Unix and Linux environment. Heres a step-by-step-by-s guide on creating a file, entering content, and saving it with vi, as well as how to run your script and view ots output.

	1. Opening vi to create a new file
		open your terminal.
		Type the following  command to create or open a file in vi:
		
		vi my_script.sh
		
	2. Bsic vi editing commands
		When you open vi, your in command mode, where you can issue commans to vi. Heres how to enter insert mode to start writting:
			Press i to enter insert mode. You can now type content into the file.
	
	3. Writing Content in vi
		Lets create a simple script that prints "Hellow, World!" and display the current date and time. With vi in insert mode, tyoe the following script:
		
		#!/bin/bash
		#This cript prints a greeting and the current date and time
		echo "Helow, World!"
		echo "The current date and time is:"
		date
		
	4. Exit insert Mode:
		Press Esc to return to command mode.
	
	5. Saving and Exiting in vi
		To save the file and exit vi:
		Type :wq and press enter
		:wq means "writ (save) and quit."
		Alternatively:
		To save without exitinff, type :w and press Enter.
		To quit without saving chaneges, type :q! and press Enter.
	
	6. Making the Script Executable
		Before running your script, You need to make it executable. In the terminal, type:
		chmod +x my_script.sh
	
	7. Runnig the script and Viewing Output
		Run the script by typing:
		./my_script.sh
		
	8. Run the script without Making it Executable:
		You can directly run it with bash by typing:
		bash my_script.sh
		
	
	View the Output:
	When you execute the script, you should see output similar to this:
	Hello, World!
	The current date and time is:
	Wed Jan 8 12:34:56 UTC 2025
	
	
Process Control Shortcuts

	Ctrl + c :Terminates a running process immediately. Useful for stopping commands or scripts that are running.
	Ctrl + z :Pauses(stops) a process and sends it to the background.
	Resume with fg(foreground) or bg(background).
	
	
	ðŸ”¹
 Comments in Shell Scripting
	Single-Line Comments:
		Use the # symbol at the beginning of a line to create a single-line comment.
		# This is a single-line comment
		echo "Hello, World!" # This comment is on the same line as a command
 
 Multi-Line Comments:
		Bash does not have a direct syntax for multi-line comments, but you can simulate it using a here-document with <<.
		: <<'COMMENT'
		This is a multi-line comment.
		You can add multiple lines here.
		COMMENT
		
		Alternatively, use the << syntax directly:
		<<comment
		This is a multi-line comment.
		It wonâ€™t be executed.
		comment