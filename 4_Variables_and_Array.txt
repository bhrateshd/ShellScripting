Workingwith Variables and Arrays

Variables and arrays allow data storage and manipulation in scripts, making automation more flexible.

	Variables: Define a variable and use $ to acces its values.
	NAME="Linux"
	echo "Welcome to $NAME Scripting"
	
	Constants: Make variable read-only with readonly.
	readonly VERSION="1.0"
	
	Arrays: Store multiple values.
	myArray=(1 2 3 "Hello" "World")
	echo "${myArray[1]}"
	Output: 2
	
	Get the length of an array:
	echo "${#myArray[@]}" or "${#myArray[*]}"
	This returns the total number of elements in the array.
	
	Get specific values from an array:
	To get values starting from the specificindex:
	echo "${myArray[*]:1}"
	This fetches all elements starting from the second element (index 1).
	
	To get specific range of values:
	echo "${myArray[*]:1:2}"
	This fetches 2 element starting from index 1.
	
	Update an array (Add new element):
	myArray+=(5 6 8)
	
	Working with Assosiative Arrays
	Declare and Initialize:
	declare -A myArray
	myArray=( [name]=Bhratesh [age]=21 )
	
	Access Values:
	echo "${myArray[name]}"
	
	Get Array Length:
	echo "${myArray[@]}"
	
	Update Array:
	myArray+=( [city]=NewYork )
	
Arrays are handy for managing lists of values, such as filenames or configurations.
